C Language Functions

1. Sorting arrays with ascending order - void qsort(void*base(pointer to first element of the array to be sorted), size_t num(the number of elements in the array pointed by base),
size_t size(the size of each element in the array, int(*comparator)(const void*,const void*)) <- a function that compares two elements

2. Converting two variables without using third one - x = x + y; y = x - y; x = x - y;
3. Diving number with remainder and quotend div_t output = div(nominator,denominator);
4. Finding absolute value - function abs()(only for integers), labs(for long int or long);
5. Finding directory path or other process variables: getenv("for example: PATH"); This function works with char * Pointer or direct by printf();
6. Dynamic Memory Allocation Function:  array(name of array) = (int*) calloc(n(number of variables to be stored(example array limit),sizeof(int));
                         calloc(elements, sizeof(data_type)); elements = number of elements to be stored, sizeof(size of each individual element)

7. Binary search(only for sorted arrays!): 

void* bsearch( const void* key, const void* ptr, std::size_t count,
               std::size_t size, * comp );
void *bsearch(const void *key, const void *base, size_t nitems, size_t size, int (*compar)(const void *, const void *))

Parameters :
key     -    element to be found
ptr     -    pointer to the array to examine
count    -    number of element in the array
size    -    size of each element in the array in bytes
comp    -    comparison function which returns ?a negative integer value if 
             the first argument is less than the second,
             a positive integer value if the first argument is greater than the second
             and zero if the arguments are equal.
